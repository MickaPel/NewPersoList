{"version":3,"sources":["Components/Header/Header.js","Components/Home/Home.js","Components/Footer/Footer.js","Components/Profile/Profile.js","Redux/Redux-Firebase/AuthAction.js","Redux/type.js","Components/GroceryList2/GroceryList2.js","Redux/actions.js","Components/SignUp/SignUp.js","Components/Login/Login.js","Components/CreatePrincipalList/AddToList.js","Redux/Redux-Firebase/ItemActions.js","Components/CreatePrincipalList/Product.js","Components/CreatePrincipalList/PrincipalList.js","Components/PrincipalList/ShowPrincipalList.js","App.js","reportWebVitals.js","Components/Firebase/firebase.js","Redux/reducer.js","Redux/store.js","Redux/Redux-Firebase/ItemReducer.js","Redux/Redux-Firebase/AuthReducer.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","margin","color","fontSize","customBadge","backgroundColor","Header","classes","list","useSelector","state","firebase","auth","isEmpty","className","AppBar","position","style","Toolbar","IconButton","edge","aria-label","component","Link","to","Badge","badgeContent","badge","Typography","variant","width","paddingTop","marginBottom","button","marginTop","button2","marginLeft","Home","fontFamily","Button","height","background","footer","text1","text2","Footer","Paper","Grid","container","direction","justify","alignItems","button1","notconnect","Profile","props","dispatch","useDispatch","useEffect","setTimeout","history","push","justifyContent","onClick","getState","getFirebase","signOut","then","type","size","ADD_TO_P_LIST","REMOVE_FROM_P_LIST","CHECK_P_PRODUCT","CLEAR_LIST","CHECK_S_PRODUCT","ADD_TO_S_LIST","REMOVE_FROM_S_LIST","div","pos","GroceryList","array","listValues","items","useState","item","setItem","value","setValue","Card","CardContent","TextField","onChange","e","target","preventDefault","payload","map","itemId","id","textDecoration","completed","Array","isArray","length","SignUp","email","password","setState","handleChange","gutterBottom","label","CardActions","user","createUserWithEmailAndPassword","catch","err","Login","signInWithEmailAndPassword","grid","AddToList","product","checked","products","firestore","authorId","uid","collection","add","date","Date","Product","doc","delete","minWidth","compose","connect","ordered","firestoreConnect","ownProps","where","orderBy","list2","firstList","setFirstList","secondList","setSecondList","idx","temp","splice","handleRemoveItem","handleRemoveItem2","App","exact","path","GroceryList2","PrincipalList","ShowPrincipalList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initialState","items2","rootReducer","combineReducers","firebaseReducer","firestoreReducer","action","filter","todo","value2","itemList","console","log","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","getFirestore","rrfProps","config","createFirestoreInstance","AuthIsLoaded","children","isLoaded","role","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d5459f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        margin: \"auto\",\r\n        color: \"#FFC107\",\r\n        fontSize: 30\r\n    },\r\n    customBadge: {\r\n        backgroundColor: \"#79D70F\"\r\n    }\r\n}));\r\n\r\n\r\nfunction Header() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const list = useSelector(state => state.firebase.auth.isEmpty);\r\n\r\n    // //Check if array is empty\r\n    // function arrayIsEmpty(array) {\r\n    //     //If it's not an array, return FALSE.\r\n    //     if (!Array.isArray(array)) {\r\n    //         return false;\r\n    //     }\r\n    //     //If it is an array, check its length property\r\n    //     if (array.length === 0) {\r\n    //         //Return TRUE if the array is empty\r\n    //         return true;\r\n    //     }\r\n    //     //Otherwise, return FALSE.\r\n    //     return false;\r\n    // }\r\n\r\n    // const userConnect = () => {\r\n    //     if(arrayIsEmpty(list) === false) {\r\n    //         return \r\n    //     }\r\n    // }\r\n\r\n    // const StyledBadge2 = withStyles(theme => ({\r\n    //     badge: {\r\n    //         backgroundColor: '#44b700',\r\n    //         // boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    //         // '&::after': {\r\n    //         //     position: 'absolute',\r\n    //         //     top: 0,\r\n    //         //     left: 0,\r\n    //         //     width: '100%',\r\n    //         //     height: '100%',\r\n    //         //     borderRadius: '50%',\r\n    //         //     animation: '$ripple 1.2s infinite ease-in-out',\r\n    //         //     border: '1px solid #44b700',\r\n    //         //     content: '\"\"',\r\n    //         // },\r\n    //         // },\r\n    //         // '@keyframes ripple': {\r\n    //         // '0%': {\r\n    //         //     transform: 'scale(.8)',\r\n    //         //     opacity: 1,\r\n    //         // },\r\n    //         // '100%': {\r\n    //         //     transform: 'scale(2.4)',\r\n    //         //     opacity: 0,\r\n    //         // },\r\n    //         },\r\n    // }))(Badge);\r\n\r\n    // const styleBadge = {\r\n    //     backgroundColor: arrayIsEmpty(list) ? \"\" : \"#00AFD7\"\r\n    // }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{ backgroundColor: \"#346751\" }}>\r\n                <Toolbar>\r\n                    \r\n                        <IconButton edge=\"start\" \r\n                                    className={classes.menuButton} \r\n                                    color=\"inherit\" \r\n                                    aria-label=\"menu\"\r\n                                    component={Link} \r\n                                    to={\"/profile\"}>\r\n                                        <Badge badgeContent=\"\" \r\n                                        classes={{ badge: list ? \"\" : classes.customBadge }}\r\n                                        >\r\n                                            <AccountCircleIcon style={{ fontSize: 35 }}/>\r\n                                        </Badge>\r\n                        </IconButton>\r\n                    \r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                            PersoList\r\n                    </Typography>\r\n                    <IconButton edge=\"start\" \r\n                                className={classes.menuButton} \r\n                                aria-label=\"menu\"\r\n                                component={Link} \r\n                                to={\"/profile\"}\r\n                                style={{ backgroundColor: \"#346751\" }}>\r\n                        <AccountCircleIcon style={{ backgroundColor: \"#346751\", color: \"#346751\"}}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"@fontsource/teko\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n        paddingTop: 20,\r\n        marginBottom: 20\r\n    },\r\n    button: {\r\n        color: \"#ECDBBA\",\r\n        backgroundColor: \"#346751\",\r\n        marginRight: 2,\r\n        marginTop: 10\r\n    },\r\n    button2: {\r\n        color: \"#ECDBBA\",\r\n        backgroundColor: \"#346751\",\r\n        marginLeft: 2,\r\n        marginTop: 10\r\n    }\r\n}));\r\n\r\nfunction Home() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const styles = {\r\n        fontSize: 20,\r\n        color: \"#B4846C\",\r\n        fontFamily: 'Teko'\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n                <Typography variant=\"body2\" component=\"p\" \r\n                style={styles}\r\n                >\r\n                Avez-vous déja réussi à faire votre liste de courses sans oublier un produit? Ou pire encore, oublié\r\n                d'acheter un produit qui était justement inscrit sur votre liste de courses? Si c'est le cas, vous \r\n                connaissez sûrement ce moment où en rentrant des courses, arrivé devant votre porte, vous vous dites:\r\n                \"Bordel de m***e!! J'ai oublié la crème fraîche!\" Ou ce moment où vous passer à la caisse et à ce moment précis\r\n                vous vous rendez compte que vous avez oublié quelque chose, que vous n'aurez pas le temps d'aller le\r\n                chercher car toutes vos courses sont déjà sur le tapis, qu'une queue de dix mètres se situe derrière vous\r\n                et que la caissière au regard morne est déjà en train de passer vos articles au scanner...\r\n                <br />\r\n                Désormais ce temps est révolu. Et ce grâce à PersoList qui vous permet de personnaliser votre\r\n                propre liste de courses. Ici, vous créez une liste initiale qui est sauvegardé en permanence.\r\n                Le jour de vos courses vous pouvez donc la checker afin de supprimer les articles que vous n'avez pas\r\n                besoin pour ce jour précis, ou en ajouter dans le cas contraire. Ainsi, vous n'avez plus besoin de\r\n                refaire une liste chaque semaine, mais plutôt personnaliser celle d'origine. \r\n                <br />\r\n                Ne vous inquietez pas, c'est super simple!\r\n                </Typography>\r\n                    \r\n                        <Button color=\"inherit\" \r\n                                        component={Link} \r\n                                        to={\"/sign-up\"}\r\n                                        className={classes.button}>\r\n                                            Inscription\r\n                        </Button>\r\n                        <Button color=\"inherit\" \r\n                                        component={Link} \r\n                                        to={\"/login\"}\r\n                                        className={classes.button2}>\r\n                                            Connexion\r\n                        </Button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n        height: 30,\r\n        background: '#30475e',\r\n    },\r\n    footer: {\r\n        background: '#346751',\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        paddingTop: 10\r\n    },\r\n    text1: {\r\n        marginLeft: 10\r\n    },\r\n    text2: {\r\n        marginRight: 10\r\n    }\r\n\r\n}));\r\n\r\nfunction Footer() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.footer}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Typography component=\"h6\" className={classes.text1}>\r\n                        persolist1@gmail.com\r\n                    </Typography>\r\n                    <Typography component=\"h6\" className={classes.text2}>\r\n                        &copy; PersoList, 2021\r\n                    </Typography>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signOut } from \"../../Redux/Redux-Firebase/AuthAction\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        color: \"#EAE2B6\",\r\n        backgroundColor: \"#57837B\",\r\n        marginTop: 40\r\n    },\r\n    button1: {\r\n        color: \"#EAE2B6\",\r\n        backgroundColor: \"#5D8233\",\r\n        marginTop: 40,\r\n        marginBottom: 20\r\n    },\r\n    button2: {\r\n        color: \"#ECDBBA\",\r\n        backgroundColor: \"red\",\r\n        marginTop: 10,\r\n        marginBottom: 20\r\n    },\r\n    title: {\r\n        paddingTop: 20,\r\n        fontSize: 22,\r\n        marginBottom: 20,\r\n        color: \"#ECD662\",\r\n        margin: \"auto\"\r\n    },\r\n    notconnect: {\r\n        color: \"#ECD662\",\r\n        paddingTop: 20,\r\n    }\r\n}));\r\n\r\nfunction Profile(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const list = useSelector(state => state.firebase.auth.isEmpty);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(list === true) {\r\n            \r\n                setTimeout(() =>{\r\n                    props.history.push(\"/\")\r\n                    }, 2000);\r\n            }\r\n        \r\n        \r\n    }, [list, props.history])\r\n\r\n    return list === true ? (\r\n        <p className={classes.notconnect}>Vous n'êtes pas connecté. Nous vous redirigeons vers la page d'acceuil</p>\r\n        ) : (\r\n            <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            >\r\n                <h3 className={classes.title}>Hello!</h3>\r\n                <Button onClick={() => {\r\n                                        dispatch(signOut());\r\n                                        setTimeout(() =>{\r\n                                                        props.history.push(\"/\")\r\n                                                        }, 1000);\r\n                                        }\r\n                                }\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.button2}>Déconexion</Button>\r\n                <Button component={Link} \r\n                        to=\"/edit-principal-list\"\r\n                        variant=\"outlined\" \r\n                        className={classes.button1}>\r\n                            Nouvelle course\r\n                </Button>\r\n            </Grid>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","export const signIn = user => {\r\n    return (dispatch, getState, {\r\n        getFirebase\r\n    }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(user.email, user.password)\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"SIGN_IN\"\r\n                });\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: \"SIGN_IN_ERR\"\r\n                }, err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {\r\n        getFirebase\r\n    }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"SIGN_OUT\"\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\n// export const signUp = user => {\r\n//     return (dispatch, \r\n//         getState,\r\n//         { getFirebase, getFirestore }) => {\r\n//         const firebase = getFirebase();\r\n//         const firestore = getFirestore();\r\n\r\n//         firebase\r\n//             .auth()\r\n//             .createUserWithEmailAndPassword(user.email, user.password)\r\n//             .then(() => {\r\n//                 dispatch({\r\n//                     type: \"SIGN_UP\"\r\n//                 });\r\n//             })\r\n//             .catch(err => {\r\n//                 dispatch({\r\n//                     type: \"SIGN_UP_ERR\"\r\n//                 }, err);\r\n//             });\r\n//     };\r\n// };\r\n\r\nexport const signUp = user => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n    \r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(user.email, user.password)\r\n            .then(() => {\r\n                dispatch({ type: \"SIGN_UP\" });\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: \"SIGN_UP_ERR\" }, err);\r\n            });\r\n        };\r\n    };","export const ADD_TO_P_LIST = \"ADD_TO_P_LIST\"\r\nexport const REMOVE_FROM_P_LIST = \"REMOVE_FROM_P_LIST\"\r\nexport const CHECK_P_PRODUCT = \"CHECK_P_PRODUCT\"\r\nexport const CLEAR_LIST = \"CLEAR_LIST\"\r\nexport const CHECK_S_PRODUCT = \"CHECK_S_PRODUCT\"\r\nexport const ADD_TO_S_LIST = \"ADD_TO_S_LIST\"\r\nexport const REMOVE_FROM_S_LIST = \"REMOVE_FROM_S_LIST\"","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { addToPList, removeFromPList } from '../../Redux/actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n    div: {\r\n        width: 375,\r\n        margin: \"auto\"\r\n    },\r\n    root: {\r\n        width: 350,\r\n        height: 90,\r\n        marginTop: 15,\r\n        margin: \"auto\",\r\n        backgroundColor: \"#57837B\"\r\n    },\r\n    title: {\r\n        paddingTop: 20,\r\n        fontSize: 22,\r\n        color: \"#ECDBBA\",\r\n        margin: \"auto\"\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: \"auto\",\r\n        backgroundColor: \"#7F8B52\",\r\n        marginTop: 20\r\n    }\r\n});\r\n\r\nfunction GroceryList() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dataList = useSelector(state => state);\r\n    const listValues = dataList.list.items;\r\n\r\n    const [item, setItem] = useState(\"\");\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleClick = (e) => {\r\n        setItem(e.target.value);\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        if (item) {\r\n            dispatch(addToPList(item));\r\n            setItem(\"\");\r\n            setValue(\"\");\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function arrayIsEmpty(array) {\r\n        //If it's not an array, return FALSE.\r\n        if (!Array.isArray(array)) {\r\n            return false;\r\n        }\r\n        //If it is an array, check its length property\r\n        if (array.length === 0) {\r\n            //Return TRUE if the array is empty\r\n            return true;\r\n        }\r\n        //Otherwise, return FALSE.\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n            <Typography className={classes.title}>\r\n                Ajouter des articles juste pour cette course\r\n            </Typography>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <TextField value={value} variant=\"outlined\" onChange={handleClick}/>\r\n                    <Button size=\"small\" onClick={handleChange}>Ajouter</Button>\r\n                </CardContent>\r\n            </Card>\r\n\r\n                    {listValues.map((item) => (\r\n                        <div>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                >\r\n                                    <IconButton color=\"secondary\" \r\n                                                aria-label=\"upload picture\" \r\n                                                component=\"span\"\r\n                                                onClick={() => dispatch(removeFromPList(item.id))}>\r\n                                        <ClearIcon />\r\n                                    </IconButton>\r\n                                    <p key={item.value} \r\n                                    style={{ textDecoration: item.completed ? \"line-through\" : \"\",\r\n                                            color:\"#ECDBBA\"}}\r\n                                    >{item.value}</p>\r\n                                    \r\n                            </Grid>\r\n                        </div>\r\n                    ))} \r\n                    <Button className={classes.button}\r\n                            component={Link}\r\n                            to=\"/principal-list\"\r\n                            >\r\n                                { arrayIsEmpty(listValues) ? \"Non, pas la peine\" : \"Ajouter pour cette course\"}\r\n                    </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroceryList;\r\n","import { ADD_TO_P_LIST, REMOVE_FROM_P_LIST, CHECK_P_PRODUCT, ADD_TO_S_LIST, REMOVE_FROM_S_LIST,\r\n    CHECK_S_PRODUCT, CLEAR_LIST } from \"./type\";\r\n\r\nexport const addToPList = (data) => {\r\n    return {\r\n        type: ADD_TO_P_LIST,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeFromPList = (itemId) => {\r\n    return {\r\n        type: REMOVE_FROM_P_LIST,\r\n        payload: {\r\n            id: itemId\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkPProduct = (id) => {\r\n    return {\r\n        type: CHECK_P_PRODUCT,\r\n        id\r\n    }\r\n}\r\n\r\nexport const clearList = () => {\r\n    return {\r\n        type: CLEAR_LIST\r\n    }\r\n}\r\n\r\nexport const checkSProduct = (id) => {\r\n    return {\r\n        type: CHECK_S_PRODUCT,\r\n        id\r\n    }\r\n}\r\n\r\nexport const addToSList = (data) => {\r\n    return {\r\n        type: ADD_TO_S_LIST,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeFromSList = (itemId) => {\r\n    return {\r\n        type: REMOVE_FROM_S_LIST,\r\n        payload: {\r\n            id: itemId\r\n        }\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signUp } from \"../../Redux/Redux-Firebase/AuthAction\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        margin: \"auto\",\r\n        paddingTop: 20\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n    },\r\n    pos: {\r\n        marginTop: 5,\r\n    },\r\n    button: {\r\n        margin: \"auto\",\r\n        backgroundColor: \"#7F8B52\"\r\n    }\r\n});\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setState({...state, [e.target.id]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signUp(state));\r\n        setTimeout(() =>{\r\n            props.history.push(\"/profile\")\r\n            }, 2000);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\">\r\n                <Card style={{backgroundColor: \"#A3A847\"}}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} gutterBottom>\r\n                    Inscription\r\n                    </Typography>\r\n                    <TextField id=\"email\" \r\n                            type=\"e-mail\"\r\n                            label=\"E-mail\" \r\n                            variant=\"outlined\" \r\n                            onChange={handleChange}\r\n                            className={classes.pos}/>\r\n                    <TextField id=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\" \r\n                            variant=\"outlined\" \r\n                            onChange={handleChange}\r\n                            className={classes.pos}/>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button \r\n                        onClick={handleSubmit} \r\n                        className={classes.button} \r\n                        variant=\"outlined\">\r\n                            S'inscrire\r\n                    </Button>\r\n                </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signIn } from \"../../Redux/Redux-Firebase/AuthAction\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        margin: \"auto\",\r\n        paddingTop: 20\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n    },\r\n    pos: {\r\n        marginTop: 5,\r\n    },\r\n    button: {\r\n        margin: \"auto\",\r\n        backgroundColor: \"#7F8B52\"\r\n    }\r\n});\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setState({...state, [e.target.id]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signIn(state));\r\n        setTimeout(() =>{\r\n            props.history.push(\"/profile\")\r\n            }, 2000);\r\n    };\r\n\r\n    // const state2 = useSelector(state => state);\r\n    // // console.log(state2);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\">\r\n                <Card style={{backgroundColor: \"#A3A847\"}}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} gutterBottom>\r\n                    Connexion\r\n                    </Typography>\r\n                    <TextField id=\"email\" \r\n                            type=\"e-mail\"\r\n                            label=\"E-mail\" \r\n                            variant=\"outlined\" \r\n                            onChange={handleChange}/>\r\n                    <TextField id=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\" \r\n                            variant=\"outlined\" \r\n                            onChange={handleChange}\r\n                            className={classes.pos}/>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" \r\n                        onClick={handleSubmit}\r\n                        className={classes.button} \r\n                        variant=\"outlined\">\r\n                            Se connecter\r\n                    </Button>\r\n                </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { addToList } from \"../../Redux/Redux-Firebase/ItemActions\";\r\n\r\nconst useStyles = makeStyles({\r\n    div: {\r\n        width: 375,\r\n        margin: \"auto\"\r\n    },\r\n    root: {\r\n        width: 350,\r\n        height: 90,\r\n        marginTop: 15,\r\n        margin: \"auto\",\r\n        backgroundColor: \"#A3A847\"\r\n    },\r\n    title: {\r\n        paddingTop: 20,\r\n        fontSize: 22,\r\n        color: \"#ECDBBA\",\r\n        margin: \"auto\"\r\n    },\r\n    grid: {\r\n        margin: \"auto\"\r\n    },\r\n});\r\n\r\nfunction AddToList() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [item, setItem] = useState({\r\n                                product: \"\",\r\n                                checked: \"false\",\r\n                                    });\r\n\r\n    const handleClick = (e) => {\r\n        setItem({product: e.target.value, checked: \"false\"});\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addToList(item));\r\n        setItem({   product: \"\",\r\n                    checked: \"false\",});\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.grid}\r\n                >\r\n                    <TextField id=\"product\" label=\"\" value={item.product} variant=\"outlined\" onChange={handleClick}/>\r\n                    <Button \r\n                        onClick={handleChange}\r\n                    >Ajouter</Button>\r\n                </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToList;\r\n","\r\nexport const addToList = (products) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firestore = getFirebase().firestore();\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore\r\n        .collection(\"products\")\r\n        .add({\r\n            ...products,\r\n            authorId: authorId,\r\n            date: new Date()\r\n        })\r\n        .then(() => {\r\n                    dispatch({\r\n                        type: \"ADD_TO_LIST\",\r\n                        products,\r\n                    });\r\n                })\r\n        .catch((err) => {\r\n                        dispatch({\r\n                            type: \"ADD_TO_LIST_ERR\",\r\n                            err,\r\n                        });\r\n                });\r\n        };\r\n    };\r\n\r\nexport const removeFromList = (products) => {\r\n    return (dispatch, getState, {\r\n        getFirebase\r\n    }) => {\r\n        const firestore = getFirebase().firestore();\r\n        firestore\r\n            .collection(\"products\")\r\n            .doc(products.id)\r\n            .delete()\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"REMOVE_FROM_LIST\",\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: \"REMOVE_FROM_LIST_ERR\",\r\n                    err,\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const checkProduct = (products) => {\r\n    return (dispatch, getState, {\r\n        getFirebase\r\n    }) => {\r\n        const firestore = getFirebase().firestore();\r\n\r\n        firestore\r\n            .collection(\"products\")\r\n            .doc(products.id)\r\n            .set({\r\n                ...products,\r\n                checked: !products.checked,\r\n            }, {\r\n                merge: true\r\n            })\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"CHECK_PRODUCT\",\r\n                    products,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: \"CHECK_PRODUCT_ERR\",\r\n                    err,\r\n                });\r\n            });\r\n    };\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { removeFromList } from '../../Redux/Redux-Firebase/ItemActions';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n    div: {\r\n        width: 375,\r\n        margin: \"auto\"\r\n    },\r\n    root: {\r\n        width: 350,\r\n        margin: \"auto\",\r\n        height: 50\r\n    }\r\n});\r\n\r\nfunction Product({ product }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n                        <div>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                >\r\n                                    <IconButton color=\"secondary\" \r\n                                                aria-label=\"upload picture\" \r\n                                                component=\"span\"\r\n                                                onClick={() => dispatch(removeFromList(product))}>\r\n                                        <ClearIcon />\r\n                                    </IconButton>\r\n                                    <Typography \r\n                                    key={product} \r\n                                    style={{ textDecoration: product.checked ? \"\" : \"line-through\",\r\n                                            color:\"#ECDBBA\"}}\r\n                                    \r\n                                    >{product.product}</Typography>\r\n                                    \r\n                            </Grid>\r\n                        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport AddToList from './AddToList';\r\nimport Product from \"./Product\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    div: {\r\n        width: 375,\r\n        margin: \"auto\"\r\n    },\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title: {\r\n        paddingTop: 20,\r\n        fontSize: 22,\r\n        color: \"#ECDBBA\",\r\n        margin: \"auto\"\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: \"auto\",\r\n        marginTop: 20,\r\n        backgroundColor: \"#7F8B52\"\r\n    }\r\n});\r\n\r\nfunction PrincipalList({ list }, props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n            <Typography className={classes.title}>\r\n                Créer / Modifier ma liste\r\n            </Typography>\r\n            <AddToList />\r\n                    {list && list.map((product) => (\r\n                        <Product product={product} key={product.id} />\r\n                    ))}\r\n            <Button className={classes.button}\r\n                    component={Link}\r\n                    to=\"/grocery-list2\">Enregistrer</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const list = state.firestore.ordered.products;\r\n    return {\r\n        list: list,\r\n        uid: state.firebase.auth.uid\r\n    };\r\n    };\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect((ownProps) => [\r\n        {\r\n            collection: \"products\",\r\n            where: [\"authorId\", \"==\", ownProps.uid],\r\n            orderBy: [\"date\", \"desc\"],\r\n        },\r\n    ])\r\n)(PrincipalList);","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Link } from 'react-router-dom';\r\nimport { clearList } from '../../Redux/actions';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n    div: {\r\n        width: 375,\r\n        margin: \"auto\"\r\n    },\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title: {\r\n        paddingTop: 20,\r\n        fontSize: 22,\r\n        marginBottom: 20,\r\n        color: \"#ECD662\",\r\n        margin: \"auto\"\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: \"auto\",\r\n        backgroundColor: \"#D9DD6B\",\r\n        color: \"#8D2828\",\r\n        marginTop: 20,\r\n        marginBottom: 20\r\n    }\r\n});\r\n\r\nfunction ShowPrincipalList({ list, list2 }, props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    //First list update\r\n    const [firstList, setFirstList] = useState(list);\r\n\r\n    const handleRemoveItem = idx => {\r\n        // assigning the list to temp variable\r\n        const temp = [...firstList];\r\n    \r\n        // removing the element using splice\r\n        temp.splice(idx, 1);\r\n    \r\n        // updating the list\r\n        setFirstList(temp);\r\n    };\r\n\r\n    //Second list update\r\n    const [secondList, setSecondList] = useState(list2);\r\n\r\n    const handleRemoveItem2 = id => {\r\n        // assigning the list to temp variable\r\n        const temp = [...secondList];\r\n    \r\n        // removing the element using splice\r\n        temp.splice(id, 1);\r\n    \r\n        // updating the list\r\n        setSecondList(temp);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClearList = () => {\r\n        dispatch(clearList());\r\n    };\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n            <Typography className={classes.title}>\r\n                Ma liste:\r\n            </Typography>\r\n                    {firstList && firstList.map((product, idx) => (\r\n                        <div>\r\n                            <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            >\r\n                                <IconButton color=\"secondary\" \r\n                                            aria-label=\"upload picture\" \r\n                                            component=\"span\"\r\n                                            key={idx}\r\n                                            onClick={() =>handleRemoveItem(idx)}\r\n                                            >\r\n                                    <ClearIcon />\r\n                                </IconButton>\r\n                                <Typography \r\n                                key={product.product} \r\n                                style={{color:\"#ECDBBA\"}}\r\n                                >{product.product}</Typography>\r\n                            </Grid>\r\n                        </div>\r\n                    ))}\r\n\r\n                    {secondList && secondList.map((product, id) => (\r\n                        <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        >\r\n                            <IconButton color=\"secondary\" \r\n                                        aria-label=\"upload picture\" \r\n                                        component=\"span\"\r\n                                        key={id}\r\n                                        onClick={() =>handleRemoveItem2(id)}\r\n                                        >\r\n                                <ClearIcon />\r\n                            </IconButton>\r\n                            <Typography \r\n                            key={product.value} \r\n                            style={{color:\"#ECDBBA\"}}\r\n                            \r\n                            >{product.value}</Typography>\r\n                    </Grid>\r\n                    ))}\r\n\r\n\r\n                    <Button \r\n                    className={classes.button}\r\n                    component={Link} \r\n                    to=\"/profile\"\r\n                    onClick={handleClearList}\r\n                    >Course Terminée</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const list = state.firestore.ordered.products;\r\n    const list2 = state.list.items;\r\n    return {\r\n        list: list,\r\n        list2: list2,\r\n        uid: state.firebase.auth.uid\r\n    };\r\n    };\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect((ownProps) => [\r\n        {\r\n            collection: \"products\",\r\n            where: [\"authorId\", \"==\", ownProps.uid],\r\n            orderBy: [\"date\", \"desc\"],\r\n        },\r\n    ])\r\n)(ShowPrincipalList);","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport Header from \"./Components/Header/Header\";\nimport Home from \"./Components/Home/Home\";\nimport Footer from \"./Components/Footer/Footer\";\nimport Profile from \"./Components/Profile/Profile\";\nimport GroceryList2 from \"./Components/GroceryList2/GroceryList2\";\nimport SignUp from \"./Components/SignUp/SignUp\";\nimport Login from \"./Components/Login/Login\";\nimport PrincipalList from './Components/CreatePrincipalList/PrincipalList';\nimport ShowPrincipalList from './Components/PrincipalList/ShowPrincipalList';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      \n      <div className='page-container'>\n      <div className='content-wrapper'>\n        <Router>\n\n          <Header />\n\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/sign-up\" component={SignUp} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/profile\" component={Profile} />\n            {/* <Route path=\"/grocery-list\" component={GroceryList} /> */}\n            <Route path=\"/grocery-list2\" component={GroceryList2} />\n            <Route path=\"/edit-principal-list\" component={PrincipalList} />\n            <Route path=\"/principal-list\" component={ShowPrincipalList} />\n\n        </Router>\n        </div>\n        {/* <div className={classes.footer}> */}\n          <Footer />\n        {/* </div> */}\n\n        </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC6IK05-zzrtXpJmii_EaMdAhtE9w0cEhs\",\r\n    authDomain: \"persolist-8d424.firebaseapp.com\",\r\n    databaseURL: \"https://persolist-8d424-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"persolist-8d424\",\r\n    storageBucket: \"persolist-8d424.appspot.com\",\r\n    messagingSenderId: \"390092852942\",\r\n    appId: \"1:390092852942:web:11b5bff55d7b8fea2aca9f\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import { ADD_TO_P_LIST, REMOVE_FROM_P_LIST, CHECK_P_PRODUCT, ADD_TO_S_LIST, REMOVE_FROM_S_LIST,\r\n    CHECK_S_PRODUCT, CLEAR_LIST } from \"./type\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    items2: []\r\n};\r\n// const initialState2 = {\r\n//     counter: 0,\r\n//     list: [{ id: 0, text: \"\", completed: false }],\r\n//     list2: [{ id: 0, text: \"\", completed: false }]\r\n// };\r\n\r\nexport const listReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        case ADD_TO_P_LIST:\r\n            return {\r\n                ...state,\r\n                items: [\r\n                ...state.items,\r\n                {\r\n                    value: action.payload,\r\n                    id: action.payload,\r\n                    completed: false\r\n                }\r\n                ]\r\n            };\r\n\r\n        case REMOVE_FROM_P_LIST:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter((item) => item.id !== action.payload.id)\r\n            };\r\n\r\n        case CHECK_P_PRODUCT:\r\n            return {\r\n                ...state,\r\n                items: state.items.map(todo =>\r\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n                )\r\n            };\r\n\r\n        case CLEAR_LIST:\r\n            return {\r\n                ...state,\r\n                items: []\r\n            };\r\n\r\n        case ADD_TO_S_LIST:\r\n            return {\r\n                ...state,\r\n                items2: [\r\n                ...state.items2,\r\n                {\r\n                    value2: action.payload,\r\n                    id: action.payload,\r\n                    completed: false\r\n                }\r\n                ]\r\n            };\r\n\r\n        case REMOVE_FROM_S_LIST:\r\n            return {\r\n                ...state,\r\n                items2: state.items2.filter((item) => item.id !== action.payload.id)\r\n            };\r\n\r\n        case CHECK_S_PRODUCT:\r\n            return {\r\n                ...state,\r\n                items2: state.items2.map(todo =>\r\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n                )\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { listReducer } from \"./reducer\";\r\nimport { ItemReducer } from \"./Redux-Firebase/ItemReducer\";\r\nimport { AuthReducer } from \"./Redux-Firebase/AuthReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    list: listReducer,\r\n    itemList: ItemReducer,\r\n    auth: AuthReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","export const ItemReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n\r\n        case \"ADD_TO_LIST\": {\r\n            console.log(\"add\", action.products)\r\n            return state;\r\n        }\r\n\r\n        case \"ADD_TO_LIST_ERR\": {\r\n            console.log(\"err\")\r\n            return state;\r\n        }\r\n\r\n        case \"REMOVE_FROM_LIST\": {\r\n            console.log(\"delete\", action.products)\r\n            return state;\r\n        }\r\n\r\n        case \"REMOVE_FROM_LIST_ERR\": {\r\n            console.log(\"err\")\r\n            return state;\r\n        }\r\n\r\n        case \"CHECK_PRODUCT\": {\r\n            console.log(\"check\")\r\n            return state;\r\n        }\r\n\r\n        case \"CHECK_PRODUCT_ERR\": {\r\n            console.log(\"err\")\r\n            return state;\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}","export const AuthReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        \r\n        case \"SIGN_IN\": {\r\n            console.log(\"signin\");\r\n            return state;\r\n        }\r\n\r\n        case \"SIGN_IN_ERR\": {\r\n            console.log(\"signin err\");\r\n            return state;\r\n        }\r\n\r\n        case \"SIGN_OUT\": {\r\n            console.log(\"signout\");\r\n            return state;\r\n        }\r\n\r\n        case \"SIGN_UP\": {\r\n            console.log(\"signup\");\r\n            return state;\r\n        }\r\n\r\n        case \"SIGN_UP_ERR\": {\r\n            console.log(\"err\");\r\n            return state;\r\n        }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n// import store from './Redux/store';\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport firebase from \"./Components/Firebase/firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./Redux/store\";\nimport thunk from \"redux-thunk\";\nimport { getFirebase } from \"react-redux-firebase\";\nimport { getFirestore } from \"redux-firestore\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\n\nconst store = createStore(rootReducer,\n  composeWithDevTools(applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })))\n  );\n\n// const rrfConfig = {\n//   userProfile: \"users\",\n//   useFirestoreForProfile: true,\n//         attachAuthIsReady: true\n// };\n\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <div className=\"text-center\">\n        <div\n          className=\"spinner-grow text-primary\"\n          style={{ width: \"7rem\", height: \"7rem\" }}\n          role=\"status\"\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  return children;\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}